[[backup]]
=== 备份你的数据!

永远记得在升级之前备份数据, 这样在升级过程中遇到问题还可以回滚. 升级有时候包括升级 Elasticsearch 用于访问索引文件
的 Lucene 库, 并且当索引文件更新之后工作于新版本的 Lucene, 在之前版本的 Elasticsearch 中将无法访问当前版本的 Lucene.

[WARNING]
.永远记得在升级之前备份数据
=========================================
除非你有数据的备份, 否则你永远都不能回滚到之前的版本.
=========================================

==== 备份 1.0 以及之后的版本

要备份一个运行 1.0 或之后版本的系统, 最简单的就是使用快照功能. 请参阅完整的说明 <<modules-snapshots,使用快照进行备份和恢复>>.

==== 备份 0.90.x 以及之前的版本

要备份一个运行 0.90.x 版本的系统:

===== 第 1 步: 禁用索引刷新

它将防止备份过程中索引被刷新到磁盘上:

[source,js]
-----------------------------------
PUT /_all/_settings
{
  "index": {
    "translog.disable_flush": "true"
  }
}
-----------------------------------
// AUTOSENSE

===== 第 2 步: 禁用重新分配

它将防止备份过程中集群将数据文件从一个节点移动到另一个节点:

[source,js]
-----------------------------------
PUT /_cluster/settings
{
  "transient": {
    "cluster.routing.allocation.disable_allocation": "true"
  }
}
-----------------------------------
// AUTOSENSE

===== 第 3 步: 备份你的数据

在重新分配和索引刷新被禁用后, 使用你最喜欢的备份方式 (tar, 存储阵列的快照, 备份软件) 来开启 Elasticsearch 数据路径的备份.

===== 第 4 步: 重新启用分配和刷新

当备份完成并且不再需要从 Elasticsearch 数据路径读取数据的时候, 必须要重新启用分配和索引刷新:

[source,js]
-----------------------------------
PUT /_all/_settings
{
  "index": {
    "translog.disable_flush": "false"
  }
}

PUT /_cluster/settings
{
  "transient": {
    "cluster.routing.allocation.disable_allocation": "false"
  }
}
-----------------------------------
// AUTOSENSE
